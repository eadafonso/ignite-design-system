var i=Object.defineProperty;var r=(e,t)=>i(e,"name",{value:t,configurable:!0});import"./index.97e80a6a.js";import{c as o,A as c,M as d}from"./Props.3d16ea90.js";import"./jsx-runtime.4012748d.js";import"./iframe.a9e84556.js";import{T as l}from"./TokensGrid.01baa8d0.js";import{b as u}from"./index.2f9ea879.js";import"./string.168d58c4.js";import"./index.801fd2fc.js";import"./es.map.constructor.be738f21.js";import"./es.number.to-fixed.0354821a.js";function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a])}return e},p.apply(this,arguments)}r(p,"_extends");const f={},y="wrapper";function m({components:e,...t}){return o(y,p({},f,t,{components:e,mdxType:"MDXLayout"}),o(d,{title:"Tokens/fonts",mdxType:"Meta"}),o("h1",null,"Fonts"),o("p",null,"Esses s\xE3o as fonts utilizados no Ignite"),o(l,{tokens:u,mdxType:"TokensGrid"}))}r(m,"MDXContent");m.isMDXComponent=!0;const g=r(()=>{throw new Error("Docs-only story")},"__page");g.parameters={docsOnly:!0};const n={title:"Tokens/fonts",includeStories:["__page"]},x={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>o(c,{mdxStoryNameToKey:x,mdxComponentAnnotations:n},o(m,null))};const j=["__page"];export{j as __namedExportsOrder,g as __page,n as default};
//# sourceMappingURL=fonts.stories.b7294821.js.map
